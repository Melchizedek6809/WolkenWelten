MODS_SRCS        := $(shell find common/src/mods -type f -name '*.c')
COMMON_HDRS      := $(shell find common/src -type f -name '*.h')
COMMON_SRCS      := $(shell find common/src -type f -name '*.c')
COMMON_OBJS      := ${COMMON_SRCS:.c=.o}
COMMON_DEPS      := ${COMMON_SRCS:.c=.deps}

WEBEXCLUDE       += --exclude=releases/macos/wolkenwelten.iconset/
WEBEXCLUDE       += --exclude=releases/win/*.res

TEST_WORLD       := -worldSeed=69 -savegame=Test

.PHONY: all
all: wolkenwelten

.PHONY: release
.PHONY: .deps

%.o: %.c
	$(CC) $(OPTIMIZATION) $(WARNINGS) $(CSTD) $(CFLAGS) $(CINCLUDES) -g -c $< -o $@

%.deps: %.c
	$(CC) -MM $< -MT "$(<:.c=.o)" $(CINCLUDES) $(CLIENT_CINCLUDES) > $@

$(COMMON_DEPS): | common/src/tmp/cto.h
.deps: common/make.deps
common/make.deps: $(COMMON_DEPS)
	cat $(COMMON_DEPS) > common/make.deps

ifneq ($(MAKECMDGOALS),clean)
-include client/make.deps
endif

.PHONY: clean
clean:
	rm -f gmon.out client/make.deps client/tools/assets client/tools/objparser callgrind.out.* vgcore.* platform/win/wolkenwelten.res
	rm -f $(shell find client/src common/src server/src -type f -name '*.o')
	rm -f $(shell find client/src common/src server/src -type f -name '*.deps')
	rm -f wolkenwelten wolkenwelten.exe wolkenwelten-server wolkenwelten-server.exe tools/modscg.exe tools/modscg
	rm -f server/make.deps client/make.deps common/make.deps
	rm -rf client/src/tmp server/src/tmp common/src/tmp web/releases releases

.PHONY: web
web: release
	rsync -avhe ssh web/ wolkenwelten.net:/var/www/html/
	ssh wolkenwelten.net "mkdir -p /var/www/html/releases && cd /var/www/html/releases && mkdir -p win && mkdir -p macos && mkdir -p linux"
	rsync -avhe ssh releases/win/*.7z wolkenwelten.net:/var/www/html/releases/win/
	rsync -avhe ssh releases/macos/*.tgz wolkenwelten.net:/var/www/html/releases/macos/
	rsync -avhe ssh releases/linux/*.xz wolkenwelten.net:/var/www/html/releases/linux/
	ssh wolkenwelten.net "cd /var/www/html/ && php index.php > index.html"

.PHONY: debug
debug: CFLAGS += -O0
debug: all

.PHONY: profile
profile: CFLAGS += -pg
profile: all

.PHONY: sanitize
sanitize: CFLAGS += -fsanitize=address
sanitize: all

.PHONY: archive
archive:
	git archive --format=tar --prefix=wolkenwelten-HEAD.tar.gz/ HEAD | gzip > wolkenwelten-HEAD.tar.gz


tools/modscg: tools/modscg.c
	$(CC) -Os $(CFLAGS) $(CSTD) $< -o $@

common/src/tmp/cto.c: tools/infogen
	mkdir -p common/src/tmp/
	tools/infogen common/src/tmp/cto
common/src/tmp/cto.h: common/src/tmp/cto.c
	@true
