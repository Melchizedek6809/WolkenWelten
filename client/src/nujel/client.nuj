(define help-iter (λ (l) "Iter for (help)"
	(cond ((nil? l) #t)
	      (#t (log (describe (car l))) (help-iter (cdr l))))))
(define help (λ (i) "Describes 10 functions at offset 1"
	(let ((off (* (int i) 10)) (max (+ 10 (* (int i) 10))))
	(help-iter (sublist (map cat (symbol-table)) off max))
	(log (cat "Help page " (int i) " of " (/ (length (symbol-table)) 10) ""))) #t))

(define fasts (λ (a) "Soeeds up the game to about 4x"
	(mst  1) (s (mst  1))))

(define norms (λ (a) "Sets the game speed to the default 1x"
	(mst  4) (s (mst  4))))

(define norms (λ (a) "Sets the game speed to about 1/4x"
	(mst 16) (s (mst 16))))

(define norms (λ (a) "Sets the game speed to about 1/16x"
	(mst 64) (s (mst 64))))


(define morning (λ () "Sets the Time to 8:00 AM"
	(s (morning))))

(define noon (λ () "Sets the Time to 12:00 PM"
	(s (noon))))

(define evening (λ () "Sets the Time to 21:30 PM"
	(s (evening))))

(define night (λ () "Sets the Time to Midnight"
	(s (night))))

(define countdown (λ (i) "Counts down on the console"
	(cond ((< (int i) 0) #t)
		(#t (log  (cond ((zero? i) (ansi-green "GO!")) ((< i 4) (ansi-red i)) ((< i 6) (ansi-yellow i)) (#t i)))
		(yield (timeout 1000) (lambda ()  (countdown (-- i))))))))
