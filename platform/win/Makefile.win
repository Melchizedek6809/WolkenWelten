CC               := /mingw64/bin/gcc

CLIENT_CFLAGS    := -DSDL_SOUND -mwindows -Wl,-subsystem,windows
CLIENT_CINCLUDES := $(shell pkg-config --cflags sdl2 sdl2_mixer)

SERVER_LIBS      := -lmingw32 -static-libgcc -lws2_32 -luser32
SERVER_CFLAGS    :=

WINLIBS          := -ldinput8 -ldxguid -ldxerr8 -luser32 -lgdi32 -lwinmm -limm32 -lole32 -loleaut32 -lshell32 -lversion -luuid -lgdi32 -lopengl32 -lshlwapi -lsetupapi -lws2_32
STATICLIBS       := -static-libgcc -static -lmingw32 -lm -lstdc++ -lpthread -lopengl32 -lSDL2main -lSDL2 -lSDL2_mixer $(WINLIBS)
CLIENT_LIBS      := $(WINLIBS) $(shell pkg-config --cflags sdl2 sdl2_mixer) -lmingw32 -lSDL2main -lSDL2 -lSDL2_mixer

WEBEXCLUDE       += --exclude=releases/win/wolkenwelten/ --exclude=releases/win/*.res

.PHONY: all
all: wolkenwelten.exe wolkenwelten-server.exe

.PHONY: release.win
release: release.win

release.win: releases/win/wolkenwelten-win.zip
releases/win/wolkenwelten-win.zip: releases/win/wolkenwelten/wolkenwelten.exe
releases/win/wolkenwelten-win.zip: releases/win/wolkenwelten/wolkenwelten-server.exe
	cd releases/win/ && zip -r9X wolkenwelten-win.zip wolkenwelten/

releases/win/wolkenwelten/wolkenwelten.exe: CFLAGS    += $(CLIENT_CFLAGS)
releases/win/wolkenwelten/wolkenwelten.exe: CINCLUDES += $(CLIENT_CINCLUDES)
releases/win/wolkenwelten/wolkenwelten.exe: $(CLIENT_SRCS) $(CLIENT_HDRS)
releases/win/wolkenwelten/wolkenwelten.exe: client/src/tmp/assets.c client/src/tmp/assets.h
releases/win/wolkenwelten/wolkenwelten.exe: client/src/tmp/meshassets.c client/src/tmp/meshassets.h
releases/win/wolkenwelten/wolkenwelten.exe: common/src/tmp/cto.c common/src/tmp/cto.h
releases/win/wolkenwelten/wolkenwelten.exe: releases/win/wolkenwelten.res
	mkdir -p releases/win/wolkenwelten/
	$(CC) $(CLIENT_SRCS) $(RELEASE_OPTIMIZATION) $(CFLAGS) $(CINCLUDES) $(STATICLIBS) releases/win/wolkenwelten.res -o $@ 
	strip -gxX $@

releases/win/wolkenwelten/wolkenwelten-server.exe: CFLAGS    += $(SERVER_CFLAGS)
releases/win/wolkenwelten/wolkenwelten-server.exe: CINCLUDES += $(SERVER_CINCLUDES)
releases/win/wolkenwelten/wolkenwelten-server.exe: LIBS      += $(SERVER_LIBS)
releases/win/wolkenwelten/wolkenwelten-server.exe: $(SERVER_SRCS) $(SERVER_HDRS)
releases/win/wolkenwelten/wolkenwelten-server.exe: common/src/tmp/cto.c common/src/tmp/cto.h
releases/win/wolkenwelten/wolkenwelten-server.exe: releases/win/wolkenwelten-server.res
	mkdir -p releases/win/wolkenwelten/
	$(CC) $(SERVER_SRCS) releases/win/wolkenwelten-server.res -o $@ $(RELEASE_OPTIMIZATION) $(CFLAGS) $(CINCLUDES) $(LIBS)
	strip -gxX $@

wolkenwelten.exe: CFLAGS    += $(CLIENT_CFLAGS)
wolkenwelten.exe: CINCLUDES += $(CLIENT_CINCLUDES)
wolkenwelten.exe: LIBS      += $(CLIENT_LIBS)
wolkenwelten.exe: client/make.deps releases/win/wolkenwelten.res $(CLIENT_OBJS)
	rm -f wolkenwelten.exe
	$(CC) $(CLIENT_OBJS) releases/win/wolkenwelten.res -g -o $@ $(OPTIMIZATION) $(CFLAGS) $(CINCLUDES) $(LIBS)

wolkenwelten-server.exe: CFLAGS    += $(SERVER_CFLAGS)
wolkenwelten-server.exe: CINCLUDES += $(SERVER_CINCLUDES)
wolkenwelten-server.exe: LIBS      += $(SERVER_LIBS)
wolkenwelten-server.exe: server/make.deps releases/win/wolkenwelten-server.res $(SERVER_OBJS)
	rm -f wolkenwelten-server.exe
	$(CC) $(SERVER_OBJS) releases/win/wolkenwelten-server.res -g -o $@ $(OPTIMIZATION) $(CFLAGS) $(CINCLUDES) $(LIBS)

releases/win/wolkenwelten-server.res: platform/win/wolkenwelten-server.rc platform/win/icon.ico
	mkdir -p releases/win/wolkenwelten/
	windres $< -O coff -o $@

releases/win/wolkenwelten.res: platform/win/wolkenwelten.rc platform/win/icon.ico
	mkdir -p releases/win/wolkenwelten/
	windres $< -O coff -o $@
